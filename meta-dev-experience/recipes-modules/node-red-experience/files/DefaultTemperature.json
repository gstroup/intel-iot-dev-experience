[{"id":"baabe7c7.455418","type":"mqtt-broker","z":"","broker":"localhost","port":"1883","clientid":"","usetls":false,"verifyservercert":true,"compatmode":true,"keepalive":"15","cleansession":true,"willTopic":"","willQos":"0","willRetain":"false","willPayload":"","birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":""},{"id":"80e40497.7f1bf8","type":"serial-port","z":"aff6bf96.50094","serialport":"/dev/ttyRH-USB","serialbaud":"9600","databits":"8","parity":"none","stopbits":"1","newline":"\\n","bin":"false","out":"char","addchar":false},{"id":"aff6bf96.50094","type":"subflow","name":"RH-USB","info":"## RH-USB Subflow\n\nThis subflow uses the serial input and serial output nodes to query the \n[Omega RH-USB](http://www.omega.com/pptst/RH-USB.html) temperature and humidity\nsensor.\n\nThe two outputs correspond to:\n\n* Temperature in degrees Fahrenheit\n* Relative humidity in %\n\n**Note:** Only use this subflow once for a given sensor, since it uses a serial\nrequest and response to acquire the values. Multiple uses will result in\nunexpected results.","in":[{"x":64,"y":58,"wires":[{"id":"d5c4bc4b.2a3b4"}]}],"out":[{"x":490,"y":148,"wires":[{"id":"a1d0dbe6.5e2f28","port":1}]},{"x":489,"y":95,"wires":[{"id":"a1d0dbe6.5e2f28","port":0}]}]},{"id":"d06ad6ea.2f9528","type":"serial in","z":"aff6bf96.50094","name":"Response","serial":"80e40497.7f1bf8","x":206,"y":101,"wires":[["a1d0dbe6.5e2f28"]]},{"id":"ad01c890.52fe38","type":"serial out","z":"aff6bf96.50094","name":"Request","serial":"80e40497.7f1bf8","x":372,"y":58,"wires":[]},{"id":"d5c4bc4b.2a3b4","type":"function","z":"aff6bf96.50094","name":"PA","func":"msg.payload = \"PA\\r\"; \nreturn msg;","outputs":1,"noerr":0,"x":200,"y":58,"wires":[["ad01c890.52fe38"]]},{"id":"a1d0dbe6.5e2f28","type":"function","z":"aff6bf96.50094","name":"","func":"var s = msg.payload.replace(/>/g,'');\n\ns = s.split(\",\");\n\nvar msg1 = {payload: s[0].trim()};\nvar msg2 = {payload: s[1].trim()};\n\nreturn [msg1, msg2];","outputs":"2","noerr":0,"x":349,"y":101,"wires":[[],[]]},{"id":"a22ffb8d.5dd008","type":"subflow:aff6bf96.50094","z":"69a52aa4.965ad4","x":280,"y":170,"wires":[["39038532.c6fc7a"],[]]},{"id":"b6b6f8e0.494908","type":"mqtt out","z":"69a52aa4.965ad4","name":"Chart","topic":"/sensors","qos":"","retain":"","broker":"baabe7c7.455418","x":731,"y":147,"wires":[]},{"id":"72d2a1c6.8d2d6","type":"inject","z":"69a52aa4.965ad4","name":"Interval","topic":"","payload":"","payloadType":"date","repeat":"1","crontab":"","once":false,"x":133,"y":170,"wires":[["a22ffb8d.5dd008"]]},{"id":"f480469a.0b7fb8","type":"chart tag","z":"69a52aa4.965ad4","title":"Temperature","chartType":"gauge","dataSource":"Local","units":"Â°C","min":"0","max":"100","targetLow":"","targetHigh":"","priority":"1","sourcePriority":"1","ttl":"5","points":"50","x":567,"y":128,"wires":[["b6b6f8e0.494908"]]},{"id":"2e96f06c.d1691","type":"chart tag","z":"69a52aa4.965ad4","title":"Humidity","chartType":"gauge","dataSource":"Local","units":"% RH","min":"0","max":"100","targetLow":"","targetHigh":"","priority":"2","sourcePriority":"1","ttl":"5","points":"50","x":553,"y":170,"wires":[["b6b6f8e0.494908"]]},{"id":"4bb8841f.b4477c","type":"comment","z":"69a52aa4.965ad4","name":"Acquire from Sensor","info":"This flow acquires the temperature and humidity\nfrom the Omega RH-USB sensor, marks it up for\ncharting with the chart tag node, then sends it\nto the MQTT Out node for charting.\n\nSince the RH-USB returns the temperature in degrees\nFahrenheit, the flow includes a range node to \nconvert from Fahrenheit to Celcius. Double-click on\nthe \"F to C\" node to see how it works.","x":149,"y":128,"wires":[]},{"id":"39038532.c6fc7a","type":"function","z":"69a52aa4.965ad4","name":"F to C","func":"function round(n, d) {\n    return Number(Math.round(n+'e'+d)+'e-'+d);\n}\n\nvar f = parseFloat(msg.payload);\nmsg.payload = round(((f - 32)*5/9), 1);\n\nreturn msg;\n","outputs":1,"noerr":0,"x":418,"y":128,"wires":[["f480469a.0b7fb8"]]}]